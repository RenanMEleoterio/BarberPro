// <auto-generated />
using System;
using BarbeariaSaaS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BarbeariaSaaS.Migrations
{
    [DbContext(typeof(BarbeariaContext))]
    [Migration("20250803185053_AddMetodoPagamentoToAgendamento")]
    partial class AddMetodoPagamentoToAgendamento
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BarbeariaSaaS.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BarbeariaId")
                        .HasColumnType("integer");

                    b.Property<int>("BarbeiroId")
                        .HasColumnType("integer");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HorarioDisponivelId")
                        .HasColumnType("integer");

                    b.Property<string>("MetodoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal?>("PrecoServico")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("TipoServico")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("HorarioDisponivelId");

                    b.HasIndex("BarbeariaId", "DataHora");

                    b.HasIndex("BarbeiroId", "DataHora");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Barbearia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoConvite")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoConvite")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Barbearias");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.HorarioDisponivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BarbeiroId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("EstaDisponivel")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("BarbeiroId", "DataHora")
                        .IsUnique();

                    b.ToTable("HorariosDisponiveis");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BarbeariaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Especialidades")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Foto")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BarbeariaId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Agendamento", b =>
                {
                    b.HasOne("BarbeariaSaaS.Models.Barbearia", "Barbearia")
                        .WithMany("Agendamentos")
                        .HasForeignKey("BarbeariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BarbeariaSaaS.Models.Usuario", "Barbeiro")
                        .WithMany("AgendamentosComoBarbeiro")
                        .HasForeignKey("BarbeiroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BarbeariaSaaS.Models.Usuario", "Cliente")
                        .WithMany("AgendamentosComoCliente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BarbeariaSaaS.Models.HorarioDisponivel", null)
                        .WithMany("Agendamentos")
                        .HasForeignKey("HorarioDisponivelId");

                    b.Navigation("Barbearia");

                    b.Navigation("Barbeiro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.HorarioDisponivel", b =>
                {
                    b.HasOne("BarbeariaSaaS.Models.Usuario", "Barbeiro")
                        .WithMany("HorariosDisponiveis")
                        .HasForeignKey("BarbeiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barbeiro");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Usuario", b =>
                {
                    b.HasOne("BarbeariaSaaS.Models.Barbearia", "Barbearia")
                        .WithMany("Usuarios")
                        .HasForeignKey("BarbeariaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Barbearia");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Barbearia", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.HorarioDisponivel", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("BarbeariaSaaS.Models.Usuario", b =>
                {
                    b.Navigation("AgendamentosComoBarbeiro");

                    b.Navigation("AgendamentosComoCliente");

                    b.Navigation("HorariosDisponiveis");
                });
#pragma warning restore 612, 618
        }
    }
}
